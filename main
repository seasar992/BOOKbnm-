import sys
import os
import json
from PyQt5.QtWidgets import QApplication, QMainWindow
from MainWindows import *


class MyWindow(QMainWindow, Ui_MainWindow):

    def __init__(self, parent=None):
        super(MyWindow, self).__init__(parent)
        self.setupUi(self)

        self.initData()
        self.initSignal()
    def initSignal(self):
        self.comboBox.currentIndexChanged.connect(self.setIpItems)
        self.lineEdit.returnPressed.connect(self.enterLineEdit)
        self.pushButton.clicked.connect(self.addIpItem)
        self.pushButton_2.clicked.connect(self.clearSelection)
        self.pushButton_log_do.clicked.connect(self.addLogDoItem)
        self.pushButton_log_undo.clicked.connect(self.clearLogDoItem)

    def initData(self):

        # IP comboBox
        work_dir = './ips'
        for parent, dirnames, filenames in os.walk(work_dir, followlinks=True):
            print(dirnames)
            self.ipFileNames = filenames
            for filename in filenames:
                print('文件名：%s' % filename)
                self.comboBox.addItem(filename)
        # IP Items
        ipFile = self.comboBox.currentText()
        if ipFile:
            ipItemDatas = self.readFile("./ips/" + self.comboBox.currentText())
            for ips in ipItemDatas:
                self.listWidget.addItem(ips)

        #log item
        logJson = self.readFile("./log/logItem.json")
        logItems = logJson['item']
        for logItem in logItems:
            self.listWidget_log_undo.addItem(logItem)

    def setIpItems(self):
        fileName = self.comboBox.currentText()
        datas = self.readFile("./ips/" + fileName)

        self.listWidget.clear()
        for ip in datas:
            self.listWidget.addItem(ip)

    def addIpItem(self):
        ip = self.lineEdit.text()
        if ip:
            self.listWidget.addItem(ip)
            self.lineEdit.clear()

    def addLogDoItem(self):
        selectedItems = self.listWidget_log_undo.selectedItems()
        for selectedItem in selectedItems:
            self.listWidget_log_do.addItem(selectedItem.text())
            self.listWidget_log_undo.takeItem(self.listWidget_log_undo.row(selectedItem))

    def clearLogDoItem(self):
        selectedItems = self.listWidget_log_do.selectedItems()
        for selectedItem in selectedItems:
            self.listWidget_log_undo.addItem(selectedItem.text())
            self.listWidget_log_do.takeItem(self.listWidget_log_do.row(selectedItem))

    def clearSelection(self):
        items = self.listWidget.selectedItems()
        for item in items:
            self.listWidget.takeItem(self.listWidget.row(item))
            # self.listWidget.removeItemWidget(item)

    def enterLineEdit(self):
        self.addIpItem()



    def readFile(self, fileName):

        if fileName:
            datas = open(fileName, "rb").read()
            if datas:
                datas = json.loads(datas)
                return datas
        return []
        
if __name__ == '__main__':
    app = QApplication(sys.argv)
    myWin = MyWindow()
    myWin.show()
    sys.exit(app.exec_())
